name: Test
on:
  push:
    branches:
      - master
  pull_request:
permissions:
  pull-requests: write

jobs:
  test-check:
    name: runner / mypy (github-check)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Setup Python package
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install -r ./testdata/requirements.txt
      - name: mypy-github-check
        uses: ./
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-check
          level: warning
          reviewdog_flags: -filter-mode=file -fail-on-error
          setup_method: install
          workdir: ./testdata/
          target: success.py test.py

  test-pr-check:
    if: github.event_name == 'pull_request'
    name: runner / mypy (github-pr-check)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Setup Python package
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install -r ./testdata/requirements.txt
      - name: mypy-github-pr-check
        uses: ./
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
          level: warning
          reviewdog_flags: -filter-mode=file -fail-on-error
          setup_method: install
          workdir: ./testdata/
          target: success.py test.py

  test-pr-review:
    if: github.event_name == 'pull_request'
    name: runner / mypy (github-pr-review)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Setup Python package
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install -r ./testdata/requirements.txt
      - name: mypy-github-pr-review
        uses: ./
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          level: warning
          reviewdog_flags: -filter-mode=file -fail-on-error
          setup_method: install
          workdir: ./testdata/
          target: success.py test.py

  test-local:
    name: runner / mypy (local)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Setup Python package
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install -r ./testdata/requirements.txt
      - name: mypy-local
        uses: ./
        with:
          github_token: ${{ secrets.github_token }}
          reporter: local
          level: error
          filter_mode: nofilter
          fail_on_error: true
          setup_method: install
          workdir: ./testdata/
          target: success.py test.py

  test-local-error:
    name: runner / mypy (local error)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Setup Python package
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install -r ./testerror/requirements.txt
      - name: mypy-local-error
        id: mypy_local_error
        uses: ./
        with:
          github_token: ${{ secrets.github_token }}
          reporter: local
          level: error
          filter_mode: nofilter
          fail_on_error: true
          setup_method: install
          workdir: ./testerror/
          target: success.py test.py
        continue-on-error: true
      - name: mypy-local-error-success
        if: steps.mypy_local_error.outcome == 'success'
        run: |
          echo "::error file=.github/workflows/test.yml::mypy-local-error should outcome failure"
          exit 1
      - name: mypy-local-error-failure
        if: steps.mypy_local_error.outcome == 'failure'
        run: |
          echo "Error check OK"
          exit 0
